// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "ISpudObject.h"
#include "UObject/Object.h"
#include "Item.generated.h"












// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "ISpudObject.h"
#include "UObject/Object.h"
#include "Item.generated.h"

UCLASS(BlueprintType)
class ITEMS_API UItemComCfg : public UDataAsset
{
	GENERATED_BODY()
};

USTRUCT(BlueprintType)
struct ITEMS_API FItemBaseCom
{
	GENERATED_USTRUCT_BODY()

	UItemComCfg *Cfg() { return nullptr; }
};


template< typename TCFG >
struct ITEMS_API FItemCom
{
	GENERATED_USTRUCT_BODY()

	UPROPERTY()
	TCFG *Config = new TCFG();


	TCFG* Cfg() { return Config; }
};
//*/

//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UItemCfg : public UDataAsset
{
	GENERATED_BODY()
public:

	UPROPERTY(EditAnywhere, Category = "Item")
	TArray< UItemComCfg * > Components;

};


USTRUCT(BlueprintType)
struct ITEMS_API FItem
{
	GENERATED_USTRUCT_BODY()
};

//-----------------------------------------------------------------------------

/*
UCLASS(BlueprintType)
class ITEMS_API UICEquippableCfg : public UItemComCfg
{
	GENERATED_BODY()
};

USTRUCT(BlueprintType)
struct ITEMS_API FICEquippable : public FItemCom<UICEquippableCfg>
{
	GENERATED_USTRUCT_BODY()


};

//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UICIntegrityCfg : public UItemComCfg
{
	GENERATED_BODY()
public:

	UPROPERTY()
		float MaxIntegrity = 1.0f;

};

USTRUCT(BlueprintType)
struct ITEMS_API FICIntegrity : public FItemCom<UICIntegrityCfg>
{
	GENERATED_USTRUCT_BODY()

		UPROPERTY()
		float Integrity = 1.0f;

};

//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UICIntegrityCfg : public UItemComCfg
{
	GENERATED_BODY()
public:

	UPROPERTY()
	float MaxIntegrity = 10.0f;

};

USTRUCT(BlueprintType)
struct ITEMS_API FICIntegrity : public FItemCom<UICIntegrityCfg>
{
	GENERATED_USTRUCT_BODY()

		UPROPERTY()
		float Integrity = 1.0f;

};

//-----------------------------------------------------------------------------

UCLASS(Meta = (BlueprintSpawnableComponent))
class ITEMS_API UItemContainerComponent : public UActorComponent
{
	GENERATED_BODY()

};
//*/















UENUM(BlueprintType)
enum class EItemEnum : uint8
{
	First,
	Second,
	Third,
};

/// Simple nested UObject
UCLASS()
class ITEMS_API UItemNestedUObject : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal;

	UPROPERTY(SaveGame)
	int NestedIntVal;
	
};

/// A Item with all values in a struct
USTRUCT(BlueprintType)
struct FItemAllTypesStruct
{
	GENERATED_USTRUCT_BODY()

public:
	// Primitive types
	UPROPERTY(SaveGame)
	int IntVal;
	UPROPERTY(SaveGame)
	uint8 UInt8Val;
	UPROPERTY(SaveGame)
	uint16 UInt16Val;
	UPROPERTY(SaveGame)
	uint32 UInt32Val;
	UPROPERTY(SaveGame)
	uint64 UInt64Val;
	UPROPERTY(SaveGame)
	int8 Int8Val;
	UPROPERTY(SaveGame)
	int16 Int16Val;
	UPROPERTY(SaveGame)
	int32 Int32Val;
	UPROPERTY(SaveGame)
	int64 Int64Val;

	UPROPERTY(SaveGame)
	float FloatVal;
	UPROPERTY(SaveGame)
	double DoubleVal;
	
	UPROPERTY(SaveGame)
	EItemEnum EnumVal;

	// Built in structs
	UPROPERTY(SaveGame)
	FVector VectorVal;
	UPROPERTY(SaveGame)
	FRotator RotatorVal;
	UPROPERTY(SaveGame)
	FTransform TransformVal;

	// Strings etc
	UPROPERTY(SaveGame)
	FName NameVal;
	UPROPERTY(SaveGame)
	FString StringVal;
	UPROPERTY(SaveGame)
	FText TextVal;

	UPROPERTY(SaveGame)
	UItemNestedUObject* UObjectVal = nullptr;

	UPROPERTY(SaveGame)
	TSubclassOf<AActor> ActorSubclass;
	
	UPROPERTY(SaveGame)
	TArray< TSubclassOf<AActor> > ActorSubclassArray;
	// sadly we can't test actor refs easily here; test example world does that though

	// Arrays of the above
	UPROPERTY(SaveGame)
	TArray<int> IntArray;
	UPROPERTY(SaveGame)
	TArray<uint8> UInt8Array;
	UPROPERTY(SaveGame)
	TArray<uint16> UInt16Array;
	UPROPERTY(SaveGame)
	TArray<uint32> UInt32Array;
	UPROPERTY(SaveGame)
	TArray<uint64> UInt64Array;
	UPROPERTY(SaveGame)
	TArray<int8> Int8Array;
	UPROPERTY(SaveGame)
	TArray<int16> Int16Array;
	UPROPERTY(SaveGame)
	TArray<int32> Int32Array;
	UPROPERTY(SaveGame)
	TArray<int64> Int64Array;
	UPROPERTY(SaveGame)
	TArray<float> FloatArray;
	UPROPERTY(SaveGame)
	TArray<double> DoubleArray;
	UPROPERTY(SaveGame)
	TArray<EItemEnum> EnumArray;
	UPROPERTY(SaveGame)
	TArray<FVector> VectorArray;
	UPROPERTY(SaveGame)
	TArray<FRotator> RotatorArray;
	UPROPERTY(SaveGame)
	TArray<FTransform> TransformArray;
	UPROPERTY(SaveGame)
	TArray<FName> NameArray;
	UPROPERTY(SaveGame)
	TArray<FString> StringArray;
	UPROPERTY(SaveGame)
	TArray<FText> TextArray;

	// Arrays of custom structs or UObjects are not supported yet
};

// Item 2-level nesting
USTRUCT(BlueprintType)
struct FItemNestedStruct
{
	GENERATED_USTRUCT_BODY()

public:

	UPROPERTY(SaveGame)
	FString ItemString;

	UPROPERTY(SaveGame)
	FItemAllTypesStruct Nested;
};

UCLASS()
class ITEMS_API UItemSaveObjectBasic : public UObject
{
	GENERATED_BODY()
public:
	// Primitive types
	UPROPERTY(SaveGame)
	int IntVal;
	UPROPERTY(SaveGame)
	uint8 UInt8Val;
	UPROPERTY(SaveGame)
	uint16 UInt16Val;
	UPROPERTY(SaveGame)
	uint32 UInt32Val;
	UPROPERTY(SaveGame)
	uint64 UInt64Val;
	UPROPERTY(SaveGame)
	int8 Int8Val;
	UPROPERTY(SaveGame)
	int16 Int16Val;
	UPROPERTY(SaveGame)
	int32 Int32Val;
	UPROPERTY(SaveGame)
	int64 Int64Val;

	UPROPERTY(SaveGame)
	float FloatVal;
	UPROPERTY(SaveGame)
	double DoubleVal;
	
	UPROPERTY(SaveGame)
	EItemEnum EnumVal;

	// Built in structs
	UPROPERTY(SaveGame)
	FVector VectorVal;
	UPROPERTY(SaveGame)
	FRotator RotatorVal;
	UPROPERTY(SaveGame)
	FTransform TransformVal;

	// Strings etc
	UPROPERTY(SaveGame)
	FName NameVal;
	UPROPERTY(SaveGame)
	FString StringVal;
	UPROPERTY(SaveGame)
	FText TextVal;

	UPROPERTY(SaveGame)
	UItemNestedUObject* UObjectVal;

	UPROPERTY(SaveGame)
	TSubclassOf<AActor> ActorSubclass;

	UPROPERTY(SaveGame)
	TArray< TSubclassOf<AActor> > ActorSubclassArray;
	
	// sadly we can't Item actor refs easily here; Item example world does that though

	// Arrays of the above
	UPROPERTY(SaveGame)
	TArray<int> IntArray;
	UPROPERTY(SaveGame)
	TArray<uint8> UInt8Array;
	UPROPERTY(SaveGame)
	TArray<uint16> UInt16Array;
	UPROPERTY(SaveGame)
	TArray<uint32> UInt32Array;
	UPROPERTY(SaveGame)
	TArray<uint64> UInt64Array;
	UPROPERTY(SaveGame)
	TArray<int8> Int8Array;
	UPROPERTY(SaveGame)
	TArray<int16> Int16Array;
	UPROPERTY(SaveGame)
	TArray<int32> Int32Array;
	UPROPERTY(SaveGame)
	TArray<int64> Int64Array;
	UPROPERTY(SaveGame)
	TArray<float> FloatArray;
	UPROPERTY(SaveGame)
	TArray<double> DoubleArray;
	UPROPERTY(SaveGame)
	TArray<EItemEnum> EnumArray;
	UPROPERTY(SaveGame)
	TArray<FVector> VectorArray;
	UPROPERTY(SaveGame)
	TArray<FRotator> RotatorArray;
	UPROPERTY(SaveGame)
	TArray<FTransform> TransformArray;
	UPROPERTY(SaveGame)
	TArray<FName> NameArray;
	UPROPERTY(SaveGame)
	TArray<FString> StringArray;
	UPROPERTY(SaveGame)
	TArray<FText> TextArray;
};


UCLASS()
class ITEMS_API UItemSaveObjectStructs : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FItemAllTypesStruct SimpleStruct;	

	UPROPERTY(SaveGame)
	FItemNestedStruct NestedStruct;	

};

UCLASS()
class ITEMS_API UItemSaveObjectCustomData : public UObject, public ISpudObjectCallback
{
	GENERATED_BODY()
public:

	bool bSomeBoolean;
	int SomeInteger;
	FString SomeString;
	float SomeFloat;

	// just for Item read
	bool Peek1Succeeded;
	bool Peek1IDOK;
	bool Peek2Succeeded;
	bool Peek2IDOK;
	bool Skip1Succeeded;
	bool Skip1PosOK;
	bool Skip2Succeeded;
	bool Skip2PosOK;
	
	static const FString ItemChunkID1;
	static const FString ItemChunkID2;
	
	virtual void SpudStoreCustomData_Implementation(const USpudState* State, USpudStateCustomData* CustomData) override;
	virtual void SpudRestoreCustomData_Implementation(USpudState* State, USpudStateCustomData* CustomData) override;
};


/// Simple children UObjects and parent
UCLASS()
class ITEMS_API UItemNestedChild1 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal1;
};

UCLASS()
class ITEMS_API UItemNestedChild2 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal2;
};

UCLASS()
class ITEMS_API UItemNestedChild3 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal3;
};

UCLASS()
class ITEMS_API UItemNestedChild4 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal4;
};

UCLASS()
class ITEMS_API UItemNestedChild5 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal5;
};

UCLASS()
class ITEMS_API UItemSaveObjectParent : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	UItemNestedChild1* UObjectVal1;

	UPROPERTY(SaveGame)
	UItemNestedChild2* UObjectVal2;

	UPROPERTY(SaveGame)
	UItemNestedChild3* UObjectVal3;

	UPROPERTY(SaveGame)
	UItemNestedChild4* UObjectVal4;

	UPROPERTY(SaveGame)
	UItemNestedChild5* UObjectVal5;
};


























UCLASS(BlueprintType)
class ITEMS_API UItemComCfg : public UDataAsset
{
	GENERATED_BODY()
};

USTRUCT(BlueprintType)
struct FItemBaseCom
{
	GENERATED_USTRUCT_BODY()

	UItemComCfg *Cfg() { return nullptr; }
};
//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UItemCfg : public UDataAsset
{
	GENERATED_BODY()
public:

	UPROPERTY(EditAnywhere, Category = "Item")
	TArray< UItemComCfg * > Components;

};


USTRUCT(BlueprintType)
struct FItem
{
	GENERATED_USTRUCT_BODY()
};

//-----------------------------------------------------------------------------

/*
UCLASS(BlueprintType)
class ITEMS_API UICEquippableCfg : public UItemComCfg
{
	GENERATED_BODY()
};

USTRUCT(BlueprintType)
struct ITEMS_API FICEquippable : public FItemCom<UICEquippableCfg>
{
	GENERATED_USTRUCT_BODY()


};

//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UICIntegrityCfg : public UItemComCfg
{
	GENERATED_BODY()
public:

	UPROPERTY()
		float MaxIntegrity = 1.0f;

};

USTRUCT(BlueprintType)
struct ITEMS_API FICIntegrity : public FItemCom<UICIntegrityCfg>
{
	GENERATED_USTRUCT_BODY()

		UPROPERTY()
		float Integrity = 1.0f;

};

//-----------------------------------------------------------------------------

UCLASS(BlueprintType)
class ITEMS_API UICIntegrityCfg : public UItemComCfg
{
	GENERATED_BODY()
public:

	UPROPERTY()
	float MaxIntegrity = 10.0f;

};

USTRUCT(BlueprintType)
struct ITEMS_API FICIntegrity : public FItemCom<UICIntegrityCfg>
{
	GENERATED_USTRUCT_BODY()

		UPROPERTY()
		float Integrity = 1.0f;

};

//-----------------------------------------------------------------------------

UCLASS(Meta = (BlueprintSpawnableComponent))
class ITEMS_API UItemContainerComponent : public UActorComponent
{
	GENERATED_BODY()

};
//*/















UENUM(BlueprintType)
enum class EItemEnum : uint8
{
	First,
	Second,
	Third,
};

/// Simple nested UObject
UCLASS()
class ITEMS_API UItemNestedUObject : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal;

	UPROPERTY(SaveGame)
	int NestedIntVal;
	
};

/// A Item with all values in a struct
USTRUCT(BlueprintType)
struct FItemAllTypesStruct
{
	GENERATED_USTRUCT_BODY()

public:
	// Primitive types
	UPROPERTY(SaveGame)
	int IntVal;
	UPROPERTY(SaveGame)
	uint8 UInt8Val;
	UPROPERTY(SaveGame)
	uint16 UInt16Val;
	UPROPERTY(SaveGame)
	uint32 UInt32Val;
	UPROPERTY(SaveGame)
	uint64 UInt64Val;
	UPROPERTY(SaveGame)
	int8 Int8Val;
	UPROPERTY(SaveGame)
	int16 Int16Val;
	UPROPERTY(SaveGame)
	int32 Int32Val;
	UPROPERTY(SaveGame)
	int64 Int64Val;

	UPROPERTY(SaveGame)
	float FloatVal;
	UPROPERTY(SaveGame)
	double DoubleVal;
	
	UPROPERTY(SaveGame)
	EItemEnum EnumVal;

	// Built in structs
	UPROPERTY(SaveGame)
	FVector VectorVal;
	UPROPERTY(SaveGame)
	FRotator RotatorVal;
	UPROPERTY(SaveGame)
	FTransform TransformVal;

	// Strings etc
	UPROPERTY(SaveGame)
	FName NameVal;
	UPROPERTY(SaveGame)
	FString StringVal;
	UPROPERTY(SaveGame)
	FText TextVal;

	UPROPERTY(SaveGame)
	UItemNestedUObject* UObjectVal = nullptr;

	UPROPERTY(SaveGame)
	TSubclassOf<AActor> ActorSubclass;
	
	UPROPERTY(SaveGame)
	TArray< TSubclassOf<AActor> > ActorSubclassArray;
	// sadly we can't test actor refs easily here; test example world does that though

	// Arrays of the above
	UPROPERTY(SaveGame)
	TArray<int> IntArray;
	UPROPERTY(SaveGame)
	TArray<uint8> UInt8Array;
	UPROPERTY(SaveGame)
	TArray<uint16> UInt16Array;
	UPROPERTY(SaveGame)
	TArray<uint32> UInt32Array;
	UPROPERTY(SaveGame)
	TArray<uint64> UInt64Array;
	UPROPERTY(SaveGame)
	TArray<int8> Int8Array;
	UPROPERTY(SaveGame)
	TArray<int16> Int16Array;
	UPROPERTY(SaveGame)
	TArray<int32> Int32Array;
	UPROPERTY(SaveGame)
	TArray<int64> Int64Array;
	UPROPERTY(SaveGame)
	TArray<float> FloatArray;
	UPROPERTY(SaveGame)
	TArray<double> DoubleArray;
	UPROPERTY(SaveGame)
	TArray<EItemEnum> EnumArray;
	UPROPERTY(SaveGame)
	TArray<FVector> VectorArray;
	UPROPERTY(SaveGame)
	TArray<FRotator> RotatorArray;
	UPROPERTY(SaveGame)
	TArray<FTransform> TransformArray;
	UPROPERTY(SaveGame)
	TArray<FName> NameArray;
	UPROPERTY(SaveGame)
	TArray<FString> StringArray;
	UPROPERTY(SaveGame)
	TArray<FText> TextArray;

	// Arrays of custom structs or UObjects are not supported yet
};

// Item 2-level nesting
USTRUCT(BlueprintType)
struct FItemNestedStruct
{
	GENERATED_USTRUCT_BODY()

public:

	UPROPERTY(SaveGame)
	FString ItemString;

	UPROPERTY(SaveGame)
	FItemAllTypesStruct Nested;
};

UCLASS()
class ITEMS_API UItemSaveObjectBasic : public UObject
{
	GENERATED_BODY()
public:
	// Primitive types
	UPROPERTY(SaveGame)
	int IntVal;
	UPROPERTY(SaveGame)
	uint8 UInt8Val;
	UPROPERTY(SaveGame)
	uint16 UInt16Val;
	UPROPERTY(SaveGame)
	uint32 UInt32Val;
	UPROPERTY(SaveGame)
	uint64 UInt64Val;
	UPROPERTY(SaveGame)
	int8 Int8Val;
	UPROPERTY(SaveGame)
	int16 Int16Val;
	UPROPERTY(SaveGame)
	int32 Int32Val;
	UPROPERTY(SaveGame)
	int64 Int64Val;

	UPROPERTY(SaveGame)
	float FloatVal;
	UPROPERTY(SaveGame)
	double DoubleVal;
	
	UPROPERTY(SaveGame)
	EItemEnum EnumVal;

	// Built in structs
	UPROPERTY(SaveGame)
	FVector VectorVal;
	UPROPERTY(SaveGame)
	FRotator RotatorVal;
	UPROPERTY(SaveGame)
	FTransform TransformVal;

	// Strings etc
	UPROPERTY(SaveGame)
	FName NameVal;
	UPROPERTY(SaveGame)
	FString StringVal;
	UPROPERTY(SaveGame)
	FText TextVal;

	UPROPERTY(SaveGame)
	UItemNestedUObject* UObjectVal;

	UPROPERTY(SaveGame)
	TSubclassOf<AActor> ActorSubclass;

	UPROPERTY(SaveGame)
	TArray< TSubclassOf<AActor> > ActorSubclassArray;
	
	// sadly we can't Item actor refs easily here; Item example world does that though

	// Arrays of the above
	UPROPERTY(SaveGame)
	TArray<int> IntArray;
	UPROPERTY(SaveGame)
	TArray<uint8> UInt8Array;
	UPROPERTY(SaveGame)
	TArray<uint16> UInt16Array;
	UPROPERTY(SaveGame)
	TArray<uint32> UInt32Array;
	UPROPERTY(SaveGame)
	TArray<uint64> UInt64Array;
	UPROPERTY(SaveGame)
	TArray<int8> Int8Array;
	UPROPERTY(SaveGame)
	TArray<int16> Int16Array;
	UPROPERTY(SaveGame)
	TArray<int32> Int32Array;
	UPROPERTY(SaveGame)
	TArray<int64> Int64Array;
	UPROPERTY(SaveGame)
	TArray<float> FloatArray;
	UPROPERTY(SaveGame)
	TArray<double> DoubleArray;
	UPROPERTY(SaveGame)
	TArray<EItemEnum> EnumArray;
	UPROPERTY(SaveGame)
	TArray<FVector> VectorArray;
	UPROPERTY(SaveGame)
	TArray<FRotator> RotatorArray;
	UPROPERTY(SaveGame)
	TArray<FTransform> TransformArray;
	UPROPERTY(SaveGame)
	TArray<FName> NameArray;
	UPROPERTY(SaveGame)
	TArray<FString> StringArray;
	UPROPERTY(SaveGame)
	TArray<FText> TextArray;
};


UCLASS()
class ITEMS_API UItemSaveObjectStructs : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FItemAllTypesStruct SimpleStruct;	

	UPROPERTY(SaveGame)
	FItemNestedStruct NestedStruct;	

};

UCLASS()
class ITEMS_API UItemSaveObjectCustomData : public UObject, public ISpudObjectCallback
{
	GENERATED_BODY()
public:

	bool bSomeBoolean;
	int SomeInteger;
	FString SomeString;
	float SomeFloat;

	// just for Item read
	bool Peek1Succeeded;
	bool Peek1IDOK;
	bool Peek2Succeeded;
	bool Peek2IDOK;
	bool Skip1Succeeded;
	bool Skip1PosOK;
	bool Skip2Succeeded;
	bool Skip2PosOK;
	
	static const FString ItemChunkID1;
	static const FString ItemChunkID2;
	
	virtual void SpudStoreCustomData_Implementation(const USpudState* State, USpudStateCustomData* CustomData) override;
	virtual void SpudRestoreCustomData_Implementation(USpudState* State, USpudStateCustomData* CustomData) override;
};


/// Simple children UObjects and parent
UCLASS()
class ITEMS_API UItemNestedChild1 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal1;
};

UCLASS()
class ITEMS_API UItemNestedChild2 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal2;
};

UCLASS()
class ITEMS_API UItemNestedChild3 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal3;
};

UCLASS()
class ITEMS_API UItemNestedChild4 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal4;
};

UCLASS()
class ITEMS_API UItemNestedChild5 : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	FString NestedStringVal5;
};

UCLASS()
class ITEMS_API UItemSaveObjectParent : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY(SaveGame)
	UItemNestedChild1* UObjectVal1;

	UPROPERTY(SaveGame)
	UItemNestedChild2* UObjectVal2;

	UPROPERTY(SaveGame)
	UItemNestedChild3* UObjectVal3;

	UPROPERTY(SaveGame)
	UItemNestedChild4* UObjectVal4;

	UPROPERTY(SaveGame)
	UItemNestedChild5* UObjectVal5;
};
